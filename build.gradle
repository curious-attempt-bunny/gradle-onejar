apply plugin: 'groovy'
apply plugin: 'eclipse'

repositories {
	mavenCentral()
}

dependencies {
	groovy 'org.codehaus.groovy:groovy-all:1.7.6'
}

sourceSets {
	thirdparty {
		java {
			srcDir 'src/thirdparty/java'	
		}
	}
}

task exampleOneJar(type: OneJar) {
	mainClass = 'com.curiousattemptbunny.onejar.ExampleMain'
	mainJar = jar
}

artifacts {
  archives exampleOneJar
}

apply plugin: 'java'
class OneJar extends Jar {
	@Input
	String mainClass
	// @Input
	def runtime
	// @Input
	Jar mainJar
	
	OneJar() {
		def oneJarClasses = project.sourceSets.thirdparty.classes

		// default settings		
		mainJar = project.tasks.jar
		runtime = project.configurations.runtime

		// more defaults		
		configure {
			appendix = 'onejar'
			manifest {
			    	attributes  'Created-By':'Gradle OneJar task',
					    'Main-Class':'com.simontuffs.onejar.Boot'
			}
		
			from oneJarClasses
		
			into('lib') {
				from runtime	
			}
		}

		// post-configuration actions
		copyAction.rootSpec.addChild().into('main') {
			from { mainJar.archivePath }
			rename { 'main.jar' }
		}
	}

	public void setMainClass(String mainClass) {
		this.mainClass = mainClass
		configure {
			manifest {
				attributes 'One-Jar-Main-Class': mainClass
			}
		}	
	}

	public void setMainJar(Jar mainJar) {
		this.mainJar = mainJar
		this.dependsOn mainJar // TODO this should work for the default settings too
	}
}
